version: '3'

volumes:
  prometheus_data: {}

services: 
  web:
    build: ./tools/
    container_name: app
    image: alotropo/tools
    command: uvicorn main:app --host 0.0.0.0 
    networks: 
      - node-network
    volumes: 
      - ./tools/.:/code
      # - ./static:/code/static/

    environment:
      - PYTHONPATH=/code/ 
    tty: true
    # env_file:
    #   - ./.env
    ports: 
      - 8000
    depends_on: 
       - db

  db:
    image: postgres:alpine
    container_name: postgres_db
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=mrplato
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - 5432
    networks: 
      - node-network

    
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - 9100

    networks:
      - node-network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'

    ports:
      - 9090:9090
    networks:
      - node-network

  nginx:
    image: alotropo/nginx
    container_name: nginx_app
    networks: 
      - node-network
    volumes:
    # #   - staticfiles:/app/static/
        # - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
        - ./nginx/nginx.conf:/etc/nginx/nginx.conf
        - ./nginx/build:/var/www/html
        - ./nginx/certs:/etc/nginx/certs

    ports:
      - 80:80
      - 443:443
    depends_on:
      - web


networks: 
  node-network:
    driver: bridge  